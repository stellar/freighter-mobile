# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# frozen_string_literal: true

# Load environment variables from local .env file
# TODO: move to CI envs later
require 'dotenv'
Dotenv.load('../../.env')

opt_out_usage

default_platform(:ios)

# def replace_in_file(file, find:, replace:)
#   contents = File.read(file)
#   contents.gsub!(find, replace)
#   File.open(file, "w") {|io| io << contents }
# end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do

    # build_number = "fetch from env"

    # replace_in_file "../ios/freighter-mobile.xcodeproj/project.pbxproj",
    #                 find: /CURRENT_PROJECT_VERSION = [0-9a-z]*/i,
    #                 replace: "CURRENT_PROJECT_VERSION = #{build_number}"
    
    app_store_connect_api_key(
      key_id: ENV.fetch("APPLE_CONNECT_KEY_ID") { raise "APPLE_CONNECT_KEY_ID environment variable is required" },
      issuer_id: ENV.fetch("APPLE_CONNECT_ISSUER_ID") { raise "APPLE_CONNECT_ISSUER_ID environment variable is required" },
      key_content: ENV.fetch("APPLE_CONNECT_KEY_CONTENT") { raise "APPLE_CONNECT_KEY_CONTENT environment variable is required" },
      is_key_content_base64: true,
      duration: 1200,
      in_house: false
    )

    match(
      type: "appstore",
      readonly: true,
      git_url: ENV.fetch("FASTLANE_GIT_URL") { raise "FASTLANE_GIT_URL environment variable is required" },
      git_private_key: Base64.strict_decode64(ENV.fetch("FASTLANE_GIT_DEPLOY_KEY") { raise "FASTLANE_GIT_DEPLOY_KEY environment variable is required" }),
      git_branch: "main",
      verbose: false
    ) 

    increment_build_number(xcodeproj: "freighter-mobile.xcodeproj")
    
    build_app(
      workspace: "freighter-mobile.xcworkspace",
      scheme: "freighter-mobile-dev",
      # include_bitcode: true,
      # export_method: "app-store",
      # buildlog_path: "/tmp/build",
      # output_directory: "/tmp/build",
      # output_name: "Freighter Dev"
    ) 
    
    # upload_to_testflight(skip_waiting_for_build_processing: true)
  end
end
